;****************************

(set #sub-dir "data")		;sub directory containing data files
(set #readme-file "readme")	;name of readme file
(set #sol-file "solution")	;name of readme file
(set #gamedir "IndyLastCrusade")

;****************************

;----------------------------
; Checks if given program is reachable via the path
; if not abort install
; IN:  #program - to check
; OUT: -

(procedure P_chkrun
  (if
    (= 0 (run ("cd SYS:\nWhich %s" #program)))
    ("")
    (abort ("You must install \"%s\" first !\nIt must be accessible via the path.\nYou can find it in the whdload package." #program))
  )
)

;----------------------------
; Wait for inserting disk
; IN:  #AD_disk - name of disk
; OUT: -

(procedure P_disk
  (askdisk
    (dest #AD_disk)
    (prompt ("\nInsert Disk \"%s\" in any drive !" #AD_disk))
    (help @askdisk-help)
  )
)

(if
  (< @installer-version (+ (* 44 65536) 10))
  (
  (message
    (cat
      "Warning: your installer is outdated.\n"
      "All features of this installation won't be available, such as icon show and drawer opening.\n"
      "You have version " (/ @installer-version 65536) "." 
      (BITAND @installer-version 65535) ", needed is at least version 44.10. "
      "The 'installer' 44.10 comes with OS 3.5 but is also contained in the NDK 3.9. "
      "You may also use the InstallerNG by Jens TrÃ¶ger."
      "\n\n"
      "The installers can be obtained from the net:\n"
      "http://www.amiga.com/3.9/download/NDK3.9.lha\n"
      "aminet:util/sys/InstallerNG.lha"
    )
  )
  (set #newstuff 0)
  )
  (set #newstuff 1)
)
;****************************

(if
  (exists #readme-file)
  (if 
    (= 0 (run ("SYS:Utilities/Multiview %s" #readme-file)))
    ("")
    (run ("SYS:Utilities/More %s" #readme-file))
  )
)

(set #program "WHDLoad")
(P_chkrun)

  (set #version
    (askchoice
      (prompt "\nWhich version do you want to install ?\n")
      (default 0)
      (choices "floppy"
			   "CDTV"
      )
      (help @askchoice-help)
   )
  )

(set @default-dest
  (askdir
    (prompt ("Where should \"%s\" installed ?\nA drawer \"%s\" will automatically created." @app-name #gamedir))
    (help @askdir-help)
    (default @default-dest)
    (disk)
  )
)
(set #dest (tackon @default-dest #gamedir))
(if
  (exists #dest)
  (
    (set #choice
      (askbool
        (prompt ("\nDirectory \"%s\" already exists.\n Should it be deleted ?" #dest))
        (default 1)
        (choices "Delete" "Skip")
        (help @askbool-help)
      )
    )
    (if
      (= #choice 1)
      (run ("Delete \"%s\" \"%s.info\" All" #dest #dest))
    )
  )
)
(makedir #dest
  (help @makedir-help)
  (infos)
)

;----------------------------


(set #suffix "")

(copyfiles
  (help @copyfiles-help)
  (source ("%s%s.slave" #gamedir #suffix))
  (dest #dest)
  (newname ("%s.slave" #gamedir))
)

;(if
;  (exists ("%s.exoticon" #gamedir))
;  (set #icon
;    (askchoice
;      (prompt "\nWhich icon do you like to install ?\n")
;      (default 0)
;      (choices "Normal" "exoticon")
;      (help @askchoice-help)
;    )
;  )
;  (set #icon 0)
;)
;(select #icon
  (set #icon ("%s.inf" #gamedir))
;  (set #icon ("%s.exoticon" #gamedir))
;)
(copyfiles
  (help @copyfiles-help)
  (source #icon)
  (newname ("%s.info" #gamedir))
  (dest #dest)
)
(if
  (exists #readme-file)
  (copyfiles
    (help @copyfiles-help)
    (source #readme-file)
    (dest #dest)
  )
)
(if
  (exists ("%s.info" #readme-file))
  (copyfiles
    (help @copyfiles-help)
    (source ("%s.info" #readme-file))
    (dest #dest)
  )
)

(if
  (exists #sol-file)
  (copyfiles
    (help @copyfiles-help)
    (source #sol-file)
    (dest #dest)
  )
)
(if
  (exists ("%s.info" #sol-file))
  (copyfiles
    (help @copyfiles-help)
    (source ("%s.info" #sol-file))
    (dest #dest)
  )
)
(set #dest-org #dest)
(if
  (= #sub-dir "")
  ("")
  (
    (set #dest (tackon #dest #sub-dir))
    (makedir #dest
      (help @makedir-help)
    )
  )
)

(copyfiles (source "savegame.___")
           (dest #dest)
)


;----------------------------

(set #rooms (tackon #dest "rooms"))
(if (= 0 #version)
(
(set #AD_disk "Indy 1")
(P_disk)

(copyfiles
  (help @copyfiles-help)
  (source ("%s:indy" #AD_disk))
  (dest #dest)
  (all)
)



(copyfiles
  (help @copyfiles-help)
  (source ("%s:rooms" #AD_disk))
  (dest #rooms)
  (all)
)

(set #AD_disk "Indy 2")
(set #AD_disk_3 "Indy 3")
  (set #diskname
    (askchoice
      (prompt "\nInsert disk 2 and check disk label, can be indy2 or indy 2 (with space).\nWhich one is it ?\n")
      (default 0)
      (choices "Indy 2 / INDY 2"
			   "Indy2"
      )
      (help @askchoice-help)
   )
  )
(if (= #diskname 1)
  (
(set #AD_disk "Indy2")
(set #AD_disk_3 "Indy3")
  )
)
(P_disk)

(copyfiles
  (help @copyfiles-help)
  (source ("%s:rooms" #AD_disk))
  (dest #rooms)
  (all)
)

(set #AD_disk #AD_disk_3)
(P_disk)

(copyfiles
  (help @copyfiles-help)
  (source ("%s:rooms" #AD_disk))
  (dest #rooms)
  (all)
)
)
(
(set #AD_disk "INDIANA_JONES")
(P_disk)
(copyfiles
  (help @copyfiles-help)
  (source ("%s:indy" #AD_disk))
  (dest #dest)
  (all)
)
(copyfiles
  (help @copyfiles-help)
  (source ("%s:rooms" #AD_disk))
  (dest #rooms)
  (all)
)
)
)

; decrunch executable if needed
(set #indysize (getsize (tackon #dest "indy")))

(if (> 100000 #indysize)
(
(working)
(set #program "XFDDecrunch")
(P_chkrun)

(run ("cd \"%s\"\nxfdDecrunch indy" #dest))

)

)
(if (= #newstuff 1)
  (openwbobject #dest-org)
)
(exit)
