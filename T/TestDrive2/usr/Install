;****************************

(set #sub-dir "data")		;sub directory containing data files
(set #readme-file "readme")	;name of readme file
(set #gamedir "TestDrive2")

(procedure P_merge
(copyfiles
  (help @copyfiles-help)
  (source "datmerger")
  (dest "T:")
)
     (run ("T:datmerger \"%s\" \"%s\" T:tmp" (tackon #datadest #src1) #src2))
(copyfiles
  (help @copyfiles-help)
  (source "T:tmp")
  (dest #datadest)
  (newname #src1)
)

)

;****************************

;----------------------------
; Checks if given program is reachable via the path
; if not abort install
; IN:  #program - to check
; OUT: -

(procedure P_chkrun
  (if
    (= 0 (run ("cd SYS:\nWhich %s" #program)))
    ("")
    (abort ("You must install \"%s\" first !\nIt must be accessible via the path.\nYou can find it in the whdload package." #program))
  )
)

;****************************
;----------------------------
; open drawer if opendrawer command is available
; #dest - path

(procedure P_OpenDrawer
  (if
    (= 0 (run "cd SYS:\nWhich opendrawer"))
    (run ("opendrawer %s" #dest))
    ("")
  )
)

(procedure P_install_datadisk
(P_disk)

        (copyfiles (source ("%s:scen" #AD_disk))
                   (dest (tackon #datadest "scen"))
		   (all)
        )

        (set #src1 "scen.dat0")
        (set #src2 ("%s:scen.dat2" #AD_disk))
        (P_merge)
 )
 
;----------------------------
; Wait for inserting disk
; IN:  #AD_disk - name of disk
; OUT: -

(procedure P_disk
  (askdisk
    (dest #AD_disk)
    (prompt ("\nInsert Disk \"%s\" in any drive !" #AD_name))
    (help @askdisk-help)
  )
)


;****************************

(if
  (exists #readme-file)
  (if 
    (= 0 (run ("SYS:Utilities/Multiview %s" #readme-file)))
    ("")
    (run ("SYS:Utilities/More %s" #readme-file))
  )
)

(set #program "WHDLoad")
(P_chkrun)
(if
  (getenv "WHDLInstPath")
  (set @default-dest (getenv "WHDLInstPath"))
)

(set #dest
  (askdir
    (prompt ("Where should \"%s\" installed ?\nA drawer \"%s\" will automatically created." @app-name #gamedir))
    (help @askdir-help)
    (default @default-dest)
    (disk)
  )
)
(run ("setenv WHDLInstPath \"%s\"\ncopy ENV:WHDLInstPath ENVARC:" #dest))

(set #dest (tackon @default-dest #gamedir))
(if
  (exists #dest)
  (
    (set #choice
      (askbool
        (prompt ("\nDirectory \"%s\" already exists.\n Should it be deleted ?" #dest))
        (default 1)
        (choices "Delete" "Skip")
        (help @askbool-help)
      )
    )
    (if
      (= #choice 1)
      (run ("Delete \"%s\" \"%s.info\" All" #dest #dest))
    )
  )
)
(makedir #dest
  (help @makedir-help)
  (infos)
)

;----------------------------

(copyfiles
  (help @copyfiles-help)
  (source ("%s.slave" #gamedir))
  (dest #dest)
)


; Ask the user what to install
(set #install-datadisks
	(askoptions
		(prompt	"What do you want to install/add ?")
		(help	@askoptions-help)
		(choices
			"Program Disk + WHDLoad slave"
			"California Scenery Disk"
			"European Scenery Disk"
			"Northern Germany Scenery Disk (renamed)"
			"Muscle Car Disk"
			"Supercars Car Disk"
		)
	)
)

(if
  (= #sub-dir "")
  ("")
  (
    (set #datadest (tackon #dest #sub-dir))
    (makedir #datadest
      (help @makedir-help)
    )
  )
)

(if (BITAND #install-datadisks 1)
    (

;(if
;  (exists ("%s.exoticon" #gamedir))
;  (set #icon
;    (askchoice
;      (prompt "\nWhich icon do you like to install ?\n")
;      (default 0)
;      (choices "Normal" "NewIcon" "Exoticon")
;      (help @askchoice-help)
;    )
;  )
;  (set #icon 0)
;)
;(select #icon
;  (set #icon ("%s.inf" #gamedir))
;  (set #icon ("%s.newicon" #gamedir))
  (set #icon ("%s.exoticon" #gamedir))
;)
(copyfiles
  (help @copyfiles-help)
  (source #icon)
  (newname ("%s.info" #gamedir))
  (dest #dest)
)
(if
  (exists #readme-file)
  (copyfiles
    (help @copyfiles-help)
    (source #readme-file)
    (dest #dest)
  )
)
(if
  (exists ("%s.info" #readme-file))
  (copyfiles
    (help @copyfiles-help)
    (source ("%s.info" #readme-file))
    (dest #dest)
  )
)


;----------------------------


(set #AD_disk "tdboot")
(set #AD_name "Master disk")
(P_disk)

(copyfiles
  (help @copyfiles-help)
  (source ("%s:" #AD_disk))
  (dest #datadest)
  (choices "cars.dat0" "duel" "disktype.dat" "scen.dat0" "select.dat0")
)

(copyfiles
  (help @copyfiles-help)
  (source ("%s:cars" #AD_disk))
  (dest (tackon #datadest "cars"))
  (all)
)
(copyfiles
  (help @copyfiles-help)
  (source ("%s:sfx" #AD_disk))
  (dest (tackon #datadest "sfx"))
  (all)
)
(copyfiles
  (help @copyfiles-help)
  (source ("%s:pics" #AD_disk))
  (dest (tackon #datadest "pics"))
  (all)
)
(copyfiles
  (help @copyfiles-help)
  (source ("%s:scen" #AD_disk))
  (dest (tackon #datadest "scen"))
  (all)
)
)
)



(if (BITAND #install-datadisks 2)
    (

(set #AD_disk "SceneryDisk")
(set #AD_name "California Challenge")
(P_install_datadisk)

)
)

(if (BITAND #install-datadisks 4)
    (
(set #AD_disk "euroscene")
(set #AD_name "European Challenge")
(P_install_datadisk)

)
)
(if (BITAND #install-datadisks 8)
    (
(set #AD_disk "Northern German")
(set #AD_name "Northern Germany Challenge")
(P_install_datadisk)

)

)

(if (BITAND #install-datadisks 16)
    (
(set #AD_disk "Muscle")
(set #AD_name "Muscle Car Disk")
(P_disk)

        (copyfiles (source "Muscle:cars")
                   (dest ("%s/cars" #datadest))
		   (all)
        )
        (set #src1 "cars.dat0")
        (set #src2 "Muscle:cars.dat1")
        (P_merge)

    )

)


(if (BITAND #install-datadisks 32)
    (
(set #AD_disk "Cardisk")
(set #AD_name "Super Cars Disk")
(P_disk)

        (copyfiles (source "Cardisk:cars")
                   (dest ("%s/cars" #datadest))
		   (all)
        )

        (set #src1 "cars.dat0")
        (set #src2 "CarDisk:cars.dat1")
        (P_merge)
    )

)






(run "delete T:tmp FORCE")

(P_OpenDrawer)

(exit)
