;****************************

(set #sub-dir "data")			;sub directory containing data files
(set #readme-file "ReadMe")		;name of readme file
(set #man-file "Instructions")		;name of manual file
(set #hint-file "Hints")		;name of hint file
(set #sol-file "Solution")		;name of solution file
(set #highs-file "highs")		;name of high scores file
(set #prefix @app-name)			;name of slave, directory

(procedure P_Install
  (set #version
    (askchoice
      (prompt ("Which version of %s do you like to install?" @app-name))
      (default 0)
      (choices "Virtual Worlds compilation (with Total Eclipse)" "Original version")
      (help @askchoice-help)
    )
  )
  (select #version
    (
      (set #AD_disk "3D Worlds")
      (P_disk)
      (copyfiles
        (help @copyfiles-help)
        (source ("%s:" #AD_disk))
        (dest #dest)
        (pattern "(1|Driller|title.seq)")
      )
    )
    (
      (set #AD_disk "Driller")
      (P_disk)
      (copyfiles
        (help @copyfiles-help)
        (source ("%s:" #AD_disk))
        (dest #dest)
        (pattern "(1|Driller|title.seq)")
      )
    )
  )
)

;****************************
;----------------------------
; checks if given program is installed, if not abort install
; #program - to check

(procedure P_ChkRun
  (if (= 0 (run ("cd SYS:\nWhich %s >NIL:" #program)))
    ("")
    (abort
      (cat
	"You must install \"" #program "\" first!\n"
	"It must be accessible via the path.\n"
	"You can find it in the WHDLoad package."
      )
    )
  )
)

;----------------------------
; Wait for inserting disk
; IN:  #AD_disk - name of disk
; OUT: -

(procedure P_disk
  (askdisk
    (dest #AD_disk)
    (prompt ("\nInsert Disk \"%s\" in any drive!" #AD_disk))
    (help @askdisk-help)
  )
)

;----------------------------
; copy file including icon if exist
; #copy-file - name of file to copy

(procedure P_CopyFile
  (if (exists #copy-file) (
    (copyfiles
      (help @copyfiles-help)
      (source #copy-file)
      (dest #dest)
    )
    (if (exists ("%s.info" #copy-file)) (
      (copyfiles
        (help @copyfiles-help)
        (source ("%s.info" #copy-file))
        (dest #dest)
      )
      (tooltype
        (dest (tackon #dest #copy-file))
        (noposition)
      )
    ))
  ))
)

;****************************

(if (< @installer-version (+ (* 44 65536) 10))
  (
    (message
      (cat
        "Warning: your installer is outdated.\n"
        "Some features of this installation won't be available, "
        "such as icon show and drawer opening. "
        "You have version " (/ @installer-version 65536) "." 
        (BITAND @installer-version 65535) ", recommended is version 44.10. "
        "The 'installer' 44.10 comes with OS 3.5 but is also contained in the NDK 3.9. "
        "You may also use the InstallerNG by Jens Tröger."
        "\n\n"
        "The installers can be obtained from the net:\n"
        "http://www.amiga.com/3.9/download/NDK3.9.lha\n"
        "aminet:util/sys/InstallerNG.lha"
      )
    )
    (set #newstuff 0)
  )
  (set #newstuff 1)
)

(if (exists #readme-file)
  (if (= 0 (run ("SYS:Utilities/Multiview %s" #readme-file)))
    ("")
    (run ("SYS:Utilities/More %s" #readme-file))
  )
)

(set #program "WHDLoad")
(P_ChkRun)

(if (getenv "WHDLInstPath")
  (set @default-dest (getenv "WHDLInstPath"))
)
(set #dest
  (askdir
    (prompt
      (cat
	"Where should \"" @app-name "\" be installed?\n"
	"A drawer \"" #prefix "\" will be automatically created."
      )
    )
    (help @askdir-help)
    (default @default-dest)
  )
)
(run ("setenv WHDLInstPath \"%s\"\ncopy ENV:WHDLInstPath ENVARC:" #dest))
(set #dest (tackon #dest #prefix))
(if (exists #dest) (
  (set #choice
    (askbool
      (prompt
        (cat
          "\nDirectory \"" #dest "\" already exists.\n"
          "Should it be deleted?"
        )
      )
      (default 1)
      (choices "Delete" "Skip")
      (help @askbool-help)
    )
  )
  (if (= #choice 1)
    (delete #dest
      (help @delete-help)
      (all)
    )
  )
))
(makedir #dest
  (help @makedir-help)
  (infos)
)

;----------------------------

(copyfiles
  (help @copyfiles-help)
  (source ("%s.Slave" #prefix))
  (dest #dest)
)
(if (exists ("%s.ecl" #prefix)) ((set #icon 6)(set #icnt (+ 1 #icnt))(set #icon-ecl "Exotic OS3.5 Icon")) (set #icon-ecl ""))
(if (exists ("%s.enw" #prefix)) ((set #icon 5)(set #icnt (+ 1 #icnt))(set #icon-enw "Exotic NewIcon"))    (set #icon-enw ""))
(if (exists ("%s.col" #prefix)) ((set #icon 4)(set #icnt (+ 1 #icnt))(set #icon-col "OS3.5 Icon"))        (set #icon-col ""))
(if (exists ("%s.new" #prefix)) ((set #icon 3)(set #icnt (+ 1 #icnt))(set #icon-new "NewIcon"))           (set #icon-new ""))
(if (exists ("%s.rom" #prefix)) ((set #icon 2)(set #icnt (+ 1 #icnt))(set #icon-rom "RomIcon"))           (set #icon-rom ""))
(if (exists ("%s.mwb" #prefix)) ((set #icon 1)(set #icnt (+ 1 #icnt))(set #icon-mwb "MagicWB Icon"))      (set #icon-mwb ""))
(if (exists ("%s.inf" #prefix)) ((set #icon 0)(set #icnt (+ 1 #icnt))(set #icon-nor "Normal"))            (set #icon-nor ""))
(procedure P_Icon
  (copyfiles
    (help @copyfiles-help)
    (source ("%s.%s" #prefix #icon-suf))
    (newname ("%s.info" #icon-name))
    (dest #icon-dir)
  )
  (tooltype
    (dest (tackon #icon-dir #icon-name))
    (noposition)
  )
)
(if (> #icnt 1) (
  (if (= #newstuff 1) (
    (set #icon-dir ("T:%s Icons" #prefix))
    (makedir #icon-dir
      (help @makedir-help)
    )
    (if #icon-nor ((set #icon-suf "inf") (set #icon-name "Normal")          (P_Icon)))
    (if #icon-mwb ((set #icon-suf "mwb") (set #icon-name "MagicWB")         (P_Icon)))
    (if #icon-rom ((set #icon-suf "rom") (set #icon-name "RomIcon")         (P_Icon)))
    (if #icon-new ((set #icon-suf "new") (set #icon-name "NewIcon")         (P_Icon)))
    (if #icon-col ((set #icon-suf "col") (set #icon-name "OS3.5 Icon")      (P_Icon)))
    (if #icon-enw ((set #icon-suf "enw") (set #icon-name "Exotic NewIcon")  (P_Icon)))
    (if #icon-ecl ((set #icon-suf "ecl") (set #icon-name "Exotic GlowIcon") (P_Icon)))
    (openwbobject #icon-dir)
  ))
  (set #icon
    (askchoice
      (prompt "\nWhich icon would you like to install?\n")
      (choices #icon-nor #icon-mwb #icon-rom #icon-new #icon-col #icon-enw #icon-ecl)
      (default #icon)
      (help @askchoice-help)
    )
  )
  (if (= #newstuff 1) (
    (closewbobject #icon-dir)
    (delete #icon-dir
      (help @delete-help)
      (all)
    )
  ))
))
(select #icon
  (set #icon "inf")
  (set #icon "mwb")
  (set #icon "rom")
  (set #icon "new")
  (set #icon "col")
  (set #icon "enw")
  (set #icon "ecl")
)
(copyfiles
  (help @copyfiles-help)
  (source ("%s.%s" #prefix #icon))
  (newname ("%s.info" #prefix))
  (dest #dest)
)
(tooltype
  (dest (tackon #dest #prefix))
  (setdefaulttool "WHDLoad")
  (setstack 10240)
  (noposition)
)
(set #copy-file #readme-file)
(P_CopyFile)
(set #copy-file #man-file)
(P_CopyFile)
(set #copy-file #hint-file)
(P_CopyFile)
(set #copy-file #sol-file)
(P_CopyFile)
(set #dest-org #dest)
(if (= #sub-dir "")
  ("")
  (
    (set #dest (tackon #dest #sub-dir))
    (makedir #dest
      (help @makedir-help)
    )
  )
)
(set #copy-file #highs-file)
(P_CopyFile)
(P_Install)
(if (= #newstuff 1)
  (openwbobject #dest-org)
)
(exit)
