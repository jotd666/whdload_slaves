;**** This installer script was generated
;**** by InstallWizard 2.0 (C) 2000-2002 JOTD

(set #sub-dir "")                  ;name of the sub-directory if any
(set #readme-file "ReadMe")		;name of readme file
(set #man-file "Manual")		;name of manual file
(set #hint-file "Hints")		;name of hint file
(set #sol-file "Solution")		;name of solution file
(set #highs-file "highs")		;name of high scores file
(set #exename "")		        ;name of executable program
(set #prefix @app-name)                       ;name of slave, directory

; ---------------

(procedure P_AskSourceDir #text
(set #dest
  (askdir
    (prompt
      ("Where are the %s located?" #text)
    )
    (help @askdir-help)
    (default "ram:")
  )
)
)

;----------------------------
; copy file including icon if exist
; #copy-file - name of file to copy

(procedure P_CopyFile #copy-file
  (if
    (exists #copy-file)
    (
      (copyfiles
        (help @copyfiles-help)
        (source #copy-file)
        (dest #dest)
      )
      (if
        (exists ("%s.info" #copy-file))
        (
          (copyfiles
            (help @copyfiles-help)
            (source ("%s.info" #copy-file))
            (dest #dest)
          )
          (tooltype
            (dest (tackon #dest #copy-file))
            (noposition)
          )
        )
      )
    )
  )
)

;****************************
;----------------------------
; checks if given program is installed, if not abort install
; #program - to check

(procedure P_ChkRun #program
  (if
    (= 0 (run ("cd SYS:\nWhich %s" #program)))
    ("")
    (abort
      (cat
	"You must install \"" #program "\" first!\n"
	"It must be accessible via the path.\n"
	"You can find it in the WHDLoad package."
      )
    )
  )
)

;----------------------------
; Wait for inserting disk
; IN:  #AD_disk - name of disk
; OUT: -

(procedure P_disk
  (askdisk
    (dest #AD_disk)
    (prompt ("\nInsert Disk \"%s\" in any drive!" #AD_disk))
    (help @askdisk-help)
  )
)

(procedure P_Install

(set #diskindex 1)

(while (< #diskindex 19)
(

(set #pattern "(BIPACK#?|Install.FNT|InAMHE)")

(set #AD_disk ("BIING! AGA V1.0 DISK%02ld" #diskindex))
(P_disk)
      (copyfiles
        (help @copyfiles-help)
        (source ("%s:" #AD_disk))
        (dest #tempdest)
        (pattern #pattern)
      )
(set #diskindex (+ 1 #diskindex))
)
)

; last disk has different label, grrr

(set #AD_disk ("BIING! AGA V1.2 DISK%02ld" #diskindex))
(P_disk)
      (copyfiles
        (help @copyfiles-help)
        (source ("%s:" #AD_disk))
        (dest #tempdest)
        (pattern #pattern)
      )

)

(procedure P_Cleanup
(set #todelete (tackon #tempdest #pattern))
(delete #todelete)
(set #todelete (tackon #tempdest "install2"))
(delete #todelete)
)

;****************************

(if
  (< @installer-version (+ (* 44 65536) 10))
  (
  (message
    (cat
      "Warning: your installer is outdated.\n"
      "All features of this installation won't be available, such as icon show and drawer opening.\n"
      "You have version " (/ @installer-version 65536) "." 
      (BITAND @installer-version 65535) ", needed is at least version 44.10. "
      "The 'installer' 44.10 comes with OS 3.5 but is also contained in the NDK 3.9. "
      "You may also use the InstallerNG by Jens Tröger."
      "\n\n"
      "The installers can be obtained from the net:\n"
      "http://www.amiga.com/3.9/download/NDK3.9.lha\n"
      "aminet:util/sys/InstallerNG.lha"
    )
  )
  (set #newstuff 0)
  )
  (set #newstuff 1)
)

(if
  (exists #readme-file)
  (if
    (= 0 (run ("SYS:Utilities/Multiview %s" #readme-file)))
    ("")
    (run ("SYS:Utilities/More %s" #readme-file))
  )
)

(P_ChkRun "WHDLoad")

(set #suffix "")   ; replace by suffix if dic slave is peculiar
(if
  (getenv "WHDLInstPath")
  (set @default-dest (getenv "WHDLInstPath"))
)


    (set #action
      (askchoice
        (prompt "\nWhat do you want to do ?\n")
        (choices 
                 "Install from original floppies"
                 "Install from existing packed files on my HD"
                 "Install from already installed game on my HD"
        )
        (default 0)
        (help @askchoice-help)
      )
    )

(set #sourcedir "")
(set #install 0)

(select #action
(
(set #install 1)
)
(
(P_AskSourceDir "packed files")
(set #install 1)
(set #tempdest #dest)
(set #dest @default-dest)
)
(
(P_AskSourceDir "installed game files")
(set #datadir (tackon #dest "data1"))
(makedir #datadir
    (help @makedir-help)
)

(run ("rename %s %s" (tackon #dest "~(data1)") #datadir))
(run ("rename %s %s" (tackon #dest "data1") (tackon #dest "data")))

)
)


(if (= 1 #install)
(
(set #dest
  (askdir
    (prompt
      (cat
	"Where should \"" @app-name "\" be installed?\n"
	"A drawer \"" #prefix "\" will be automatically created."
      )
    )
    (help @askdir-help)
    (default @default-dest)
  )
)

; update for the end message
(set @default-dest #dest)

(run ("setenv WHDLInstPath \"%s\"\ncopy ENV:WHDLInstPath ENVARC:" #dest))
(set #dest (tackon #dest #prefix))

(if
  (exists #dest)
  (
    (set #choice
      (askbool
        (prompt
          (cat
            "\nDirectory \"" #dest "\" already exists.\n"
            "Should it be deleted?"
          )
        )
        (default 1)
        (choices "Delete" "Skip")
        (help @askbool-help)
      )
    )
    (if
      (= #choice 1)
      (run ("Delete \"%s\" \"%s.info\" All" #dest #dest))
    )
  )
)


(makedir #dest
  (help @makedir-help)
  (infos)
)
)
)

;----------------------------

(copyfiles
  (help @copyfiles-help)
  (source ("%s%s.Slave" #prefix #suffix))
  (dest #dest)
  (newname ("%s.slave" #prefix)))
(if (exists ("%s.glowexot"  #prefix)) ((set #icon 7)(set #icnt (+ 1 #icnt))(set #icon-gex "Exotic GlowIcon")) (set #icon-gex ""))
(if (exists ("%s.newexot"   #prefix)) ((set #icon 6)(set #icnt (+ 1 #icnt))(set #icon-nex "Exotic NewIcon"))  (set #icon-nex ""))
(if (exists ("%s.exoticon"  #prefix)) ((set #icon 5)(set #icnt (+ 1 #icnt))(set #icon-exo "Exoticon"))        (set #icon-exo ""))
(if (exists ("%s.glowicon"  #prefix)) ((set #icon 4)(set #icnt (+ 1 #icnt))(set #icon-glo "Glow Icon"))       (set #icon-glo ""))
(if (exists ("%s.coloricon" #prefix)) ((set #icon 3)(set #icnt (+ 1 #icnt))(set #icon-col "OS3.5 Icon"))      (set #icon-col ""))
(if (exists ("%s.newicon"   #prefix)) ((set #icon 2)(set #icnt (+ 1 #icnt))(set #icon-new "NewIcon"))         (set #icon-new ""))
(if (exists ("%s.romicon"   #prefix)) ((set #icon 1)(set #icnt (+ 1 #icnt))(set #icon-rom "RomIcon"))         (set #icon-rom ""))
(if (exists ("%s.inf"       #prefix)) ((set #icon 0)(set #icnt (+ 1 #icnt))(set #icon-nor "Normal"))          (set #icon-nor ""))
(procedure P_Icon
  (copyfiles
    (help @copyfiles-help)
    (source ("%s.%s" #prefix #icon-suf))
    (newname ("%s.info" #icon-name))
    (dest #icon-dir)
  )
  (tooltype
    (dest (tackon #icon-dir #icon-name))
    (noposition)
  )
)
(if
  (> #icnt 1)
  (
    (set #icon-dir ("T:%s Icons" #prefix))
    (makedir #icon-dir
      (help @makedir-help)
    )
    (if #icon-nor ((set #icon-suf "inf")       (set #icon-name #icon-nor)  (P_Icon)))
    (if #icon-rom ((set #icon-suf "romicon")   (set #icon-name #icon-rom)  (P_Icon)))
    (if #icon-new ((set #icon-suf "newicon")   (set #icon-name #icon-new)  (P_Icon)))
    (if #icon-col ((set #icon-suf "coloricon") (set #icon-name #icon-col)  (P_Icon)))
    (if #icon-glo ((set #icon-suf "glowicon")  (set #icon-name #icon-glo)  (P_Icon)))
    (if #icon-exo ((set #icon-suf "exoticon")  (set #icon-name #icon-exo)  (P_Icon)))
    (if #icon-nex ((set #icon-suf "newexot")   (set #icon-name #icon-nex)  (P_Icon)))
    (if #icon-gex ((set #icon-suf "glowexot")  (set #icon-name #icon-gex)  (P_Icon)))

    (if (= #newstuff 1)
       (openwbobject #icon-dir)
    )

    (set #icon
      (askchoice
        (prompt "\nWhich icon would you like to install?\n")
        (choices #icon-nor #icon-rom #icon-new #icon-col #icon-glo #icon-exo #icon-nex #icon-gex)
        (default #icon)
        (help @askchoice-help)
      )
    )
    (if (= #newstuff 1)
      (closewbobject #icon-dir)
    )
    (delete #icon-dir
      (help @delete-help)
      (all)
    )
  )
)
(set #isnewicon 0)

(select #icon
  (set #icon "inf")
  (set #icon "romicon")
  (
     (set #icon "newicon")
     (set #isnewicon 1)
  )
  (set #icon "coloricon")
  (set #icon "glowicon")
  (set #icon "exoticon")
  (
     (set #icon "newexot")
     (set #isnewicon 1)
  )
  (set #icon "glowexot")
)
(copyfiles
  (help @copyfiles-help)
  (source ("%s.%s" #prefix #icon))
  (newname ("%s.info" #prefix))
  (dest #dest)
)
(if
  (= #isnewicon 1)
  ("")
  (
    (tooltype
      (dest (tackon #dest #prefix))
      (settooltype "Slave")
      (settooltype "PreLoad")
    )
    (tooltype
      (dest (tackon #dest #prefix))
      (settooltype "PreLoad" "")
      (settooltype "Slave" ("%s.Slave" #prefix))
    )
  )
)
(tooltype
  (dest (tackon #dest #prefix))
  (setdefaulttool "WHDLoad")
  (setstack 10240)
  (noposition)
)
(P_CopyFile #readme-file)
(P_CopyFile #man-file)
(P_CopyFile #hint-file)
(P_CopyFile #sol-file)
(if
  (= #sub-dir "")
  ("")
  (
    (set #dest (tackon #dest #sub-dir))
    (makedir #dest
      (help @makedir-help)
    )
  )
)
(P_CopyFile #highs-file)


;0: "Install/enhance the AGA game from original floppies"
;1: "Install/enhance the AGA game from existing packed files on my HD"
;2: "Install the AGA game from already installed game on my HD"


(if (= 0 #action)
(
(set #tempdest "T:biing")
(makedir #tempdest
    (help @makedir-help)
)

(P_Install)
)
)

(copyfiles
    (help @copyfiles-help)
    (source "install2")
    (dest #tempdest)
)

(if (= 2 #action)
("")
(

(run ("c:assign BDEST: \"%s\"" #dest))
(run ("c:assign JFF: \"%s\"" #tempdest))

(run "cd JFF:\nJFF:install2\ncd SYS:")

(run ("c:assign BDEST: \"%s\" REMOVE" #dest))
(run ("c:assign JFF: \"%s\" REMOVE" #tempdest))
)
)

(if (= 0 #action)
(P_Cleanup)
)

(delete (tackon #dest "data.info"))

(if (= #newstuff 1)
  (openwbobject #dest)
)
(exit)

